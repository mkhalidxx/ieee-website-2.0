import { Button, Modal, Typography } from "@mui/material";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { Carousel } from "@mohammedsrehan/react-responsive-carousel";
import "react-responsive-carousel/lib/styles/carousel.min.css"; // requires a loader
import Comment from "../../../components/Comment/Comment";
import SignIn from "../../../components/signin/SignIn";

import Footer from "../../../components/footer/Footer";
import WriteComment from "../../../components/writeComment/WriteComment";
import styles from "./event.module.css";
import useWindowSize from "../../../helpers/customHooks";
import { useSelector } from "react-redux";
import { selectUser } from "../../../features/userSlice";
import { doc, getDoc, onSnapshot } from "firebase/firestore";
import { db } from "../../../config/firebaseConfig";
import { timeConverter } from "../../../helpers/utils";

const product = {
  images: [
    "https://images.unsplash.com/photo-1567446362432-f30e36eb96c8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80",
    "https://images.unsplash.com/photo-1567446362432-f30e36eb96c8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80",
    "https://images.unsplash.com/photo-1567446362432-f30e36eb96c8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80",
  ],
};

export default function Events() {
  const user = useSelector(selectUser);
  const router = useRouter();
  const { id } = router.query;

  const [data, setdata] = useState({});

  useEffect(() => {
    // getData(id);
    const unsub = onSnapshot(doc(db, "events", `${id}`), (doc) => {
      if (doc.exists()) {
        setdata(doc.data());
      } else {
        alert("Event not found");
      }
    });

    return () => {
      unsub(id);
    }
  }, [id, user]);

  //modal user sign in
  const [open, setOpen] = useState(false);
  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);

  const { width } = useWindowSize();

  return (
    <div className={styles.container}>
      <Head>
        <title>IEEE NSAKCET EVENTS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <section className={styles.main__hero}>
          <h1 className={styles.main__title}>{data.title}</h1>
        </section>
        <section className={styles.main__event}>
          <section className={styles.main__content}>
            <div className={styles.main__content__image}>
              <Image
                alt="event image"
                src="https://source.unsplash.com/GiQ9Yck2h3E/400x400"
                layout="fill"
                objectFit="contain"
              />
            </div>
            <div className={styles.main__content__details}>
              <div className={styles.main__content__details__header}>
                <Typography variant="subtitle1">{data.eventType}</Typography>
                <Typography variant="h6">{data.title}</Typography>
              </div>
              <div className={styles.main__content__details__box}>
                <div>
                  <Typography variant="subtitle2">Date</Typography>
                  <Typography variant="body1">
                    {timeConverter(data.date?.seconds)}
                  </Typography>
                </div>
                <div>
                  <Typography variant="subtitle2">Time</Typography>
                  <Typography variant="body1">8:00 A.M</Typography>
                </div>
                <div>
                  <Typography variant="subtitle2">Venue</Typography>
                  <Typography variant="body1">{data.venue}</Typography>
                </div>
              </div>
              <Typography variant="body1">{data.description}</Typography>
              <Button
                variant="contained"
                className={styles.main__content__details__button}
              >
                Book Your Seat
              </Button>
            </div>
          </section>
          <section className={styles.main__details}>
            <Typography
              variant="body1"
              sx={{ marginBottom: "25px", textAlign: "justify" }}
            >
              {data.details}
            </Typography>
            <Carousel
              className={styles.main__details__carousal}
              infiniteLoop={true}
              autoPlay={true}
              thumbsAxis={width <= 1200 ? "horizontal" : "vertical"}
              showThumbs={true}
              swipeable={true}
              renderThumbs={() =>
                data.images.map((img, idx) => (
                  <div
                    key={idx}
                    className={styles.main__details__carousal__thumbs}
                    axis="vertical"
                  >
                    <Image
                      src={img}
                      layout="fill"
                      objectFit="contain"
                      alt="logo"
                    />
                  </div>
                ))
              }
            >
              {data.images?.length !== 0 &&
                data.images?.map((img, idx) => (
                  <div
                    key={idx}
                    className={styles.main__details__carousal__image}
                  >
                    <Image
                      src={img}
                      alt={`${data.title} preview ${idx}`}
                      layout="fill"
                      objectFit="contain"
                      // width={300}
                      // height={300}
                      priority={idx === 0}
                    />
                  </div>
                ))}
            </Carousel>
          </section>
          <section className={styles.main__comments}>
            {!user ? (
              <div className={styles.main__comments__signInButton}>
                <Button
                  variant="outlined"
                  sx={{ color: "#12679b" }}
                  // endIcon={<AddBoxIcon />}
                  // onClick={openModal}
                  onClick={handleOpen}
                >
                  Sign In to write review
                </Button>
                <Modal
                  open={open}
                  onClose={handleClose}
                  aria-labelledby="modal-modal-title"
                  aria-describedby="modal-modal-description"
                >
                  <div className={styles.modal}>
                    <Button
                      onClick={() => setOpen((prev) => !prev)}
                      variant="contained"
                      // endIcon={<CloseIcon />}
                      sx={{
                        position: "absolute",
                        right: 0,
                        top: 0,
                        backgroundColor: "#db2b39",
                      }}
                    >
                      Close
                    </Button>
                    <SignIn />
                  </div>
                </Modal>
              </div>
            ) : (
              <></>
            )}
            <WriteComment user={user} id={id} />
            <div className={styles.main__comments__container}>
              {data.reviews?.map((review) => {
                return <Comment review={review} key={review.name} />;
              })}
            </div>
          </section>
        </section>
      </main>
      <Footer />
    </div>
  );
}
